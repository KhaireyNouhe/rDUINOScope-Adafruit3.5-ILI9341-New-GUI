/*
This sketch is demonstrating loading monochome images from a byte array.
The advantage of using monochrome images is its size. You could fit a fullscreen
monochrome image in Uno's program memory. You could not do that with
a full color image.
*/

#include "SPI.h"
#include "ILI9341_due_config.h"
#include "ILI9341_due.h"

#if defined(ARDUINO_ARCH_AVR)
#include <avr/pgmspace.h>
#elif defined(ARDUINO_SAM_DUE)
#define PROGMEM
#endif

const uint8_t arduLogo[] PROGMEM = {                                              // width 40, height 32
	B00000000, B00000000, B00000000, B00000000, B01111110,
	B00000000, B00000000, B00000000, B00000000, B00101110,
	B00000000, B00000000, B00000000, B00000000, B00101010,
	B00000001, B11111000, B00000000, B00001111, B10000000,
	B00000111, B11111110, B00000000, B00111111, B11100000,
	B00011111, B11111111, B10000000, B11111111, B11111000,
	B00111111, B00000111, B11000001, B11110000, B11111100,
	B00111100, B00000011, B11100011, B11100000, B00111100,
	B01111000, B00000000, B11110111, B10000000, B00011110,
	B01110000, B00000000, B01110111, B00000110, B00001110,
	B11100000, B00000000, B00111110, B00000110, B00000111,
	B11100001, B11111000, B00111110, B00011111, B10000111,
	B11100001, B11111000, B00011100, B00011111, B10000111,
	B11100000, B00000000, B00111110, B00000110, B00000111,
	B11110000, B00000000, B00111110, B00000110, B00001111,
	B01110000, B00000000, B01110111, B00000000, B00001110,
	B01111000, B00000000, B11110111, B10000000, B00011110,
	B00111100, B00000011, B11100011, B11100000, B00111100,
	B00111111, B00001111, B11000001, B11110000, B11111100,
	B00011111, B11111111, B00000000, B11111111, B11111000,
	B00000111, B11111100, B00000000, B00111111, B11100000,
	B00000001, B11110000, B00000000, B00001111, B10000000,
	B00000000, B00000000, B00000000, B00000000, B00000000,
	B00000000, B00000000, B00000000, B00000000, B00000000,
	B00000000, B00000000, B00000000, B00000000, B00000000,
	B01110011, B11001111, B00100010, B11100100, B01001110,
	B10001010, B00101000, B10100010, B01000100, B01010001,
	B10001010, B00101000, B10100010, B01000110, B01010001,
	B11111011, B11001000, B10100010, B01000101, B01010001,
	B10001010, B10001000, B10100010, B01000100, B11010001,
	B10001010, B01001000, B10100010, B01000100, B01010001,
	B10001010, B00101111, B00011100, B11100100, B01001110
};

// CS and DC for the LCD
#define LCD_CS 10	// Chip Select for LCD
#define LCD_DC 9	// Command/Data for LCD
#define LCD_RST 8	// Command/Data for LCD

ILI9341_due tft(LCD_CS, LCD_DC, LCD_RST);

void setup()
{
	Serial.begin(9600);
	tft.begin();
	tft.setRotation(iliRotation270);	// landscape

	tft.fillScreen(ILI9341_BLACK);	

	tft.drawBitmap(arduLogo, 160, 100, 40, 32, ILI9341_DARKCYAN);	// "transparent" background
	tft.drawBitmap(arduLogo, 110, 100, 40, 32, ILI9341_WHITE, ILI9341_DARKCYAN);	
}

void loop()
{

	/* add main program code here */

}
